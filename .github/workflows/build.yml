---
name: Build

on:
  push:
    branches-ignore: [ main ]
    tags:
      - "**"
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        os:
          # - windows-2022
          - ubuntu-22.04
          - macos-12

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install conan

      - name: Configure conan
        run: |
          conan --version
          conan profile detect
          conan config install ./profiles
          conan remote add conan-burrito "${{ secrets.CONAN_UPLOAD }}"

      - name: Install dependencies (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run:  |
          sudo apt-get update
          sudo apt-get install -y ninja-build pkg-config wget libva-dev libvdpau-dev libx11-xcb-dev \
               libfontenc-dev libice-dev libsm-dev libxaw7-dev libxcomposite-dev libxcursor-dev \
               libxdamage-dev libxext-dev libxfixes-dev libxi-dev libxinerama-dev libxkbfile-dev \
               libxmu-dev libxmuu-dev libxpm-dev libxrandr-dev libxrender-dev libxres-dev libxss-dev \
               libxt-dev libxtst-dev libxv-dev libxvmc-dev libxxf86vm-dev libxcb-render0-dev \
               libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev \
               libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev \
               libxcb-dri3-dev uuid-dev libxcb-util-dev libxcb-util0-dev libxcb-cursor-dev \
               mesa-common-dev libegl-dev 

      - name: Build
        run:  |
          python .ci/build.py

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ocr-suite-${{ matrix.os }}
          path: ${{ github.workspace }}/build/release/ocr-suite-*.zip
          if-no-files-found: error


  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifact

      - name: List artifacts
        run: ls -R
        working-directory: artifact

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            artifact/**/*
          fail_on_unmatched_files: true
